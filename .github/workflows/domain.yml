name: Domain Check and Update
on:
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check-and-update-domain:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install requests
      run: pip install requests

    - name: Check domains and create file
      id: domain_check
      run: |
        # Mevcut domaini al veya varsayılanı kullan
        if [ -f "domain.txt" ]; then
          CURRENT_DOMAIN=$(grep -o 'guncel_domain=.*' domain.txt | cut -d'=' -f2)
          echo "Mevcut domain: $CURRENT_DOMAIN"
        else
          CURRENT_DOMAIN="https://trgoals1397.xyz/"
          echo "Yeni domain.txt oluşturuluyor: $CURRENT_DOMAIN"
          echo "guncel_domain=$CURRENT_DOMAIN" > domain.txt
        fi

        # Domain numarasını al
        DOMAIN_NUMBER=$(echo $CURRENT_DOMAIN | grep -o '[0-9]\+')
        echo "Domain numarası: $DOMAIN_NUMBER"

        # Python ile domain kontrolü
        python3 -c "
        import requests
        import os
        
        def check_domain(domain):
            try:
                response = requests.get(domain, timeout=5, allow_redirects=True)
                return response.status_code == 200
            except:
                return False
        
        current_domain = '$CURRENT_DOMAIN'
        domain_number = $DOMAIN_NUMBER
        
        print('Mevcut domain kontrol ediliyor: ' + current_domain)
        current_active = check_domain(current_domain)
        print('Mevcut domain aktif mi: ' + str(current_active))
        
        next_domain = 'https://trgoals' + str(domain_number + 1) + '.xyz/'
        print('Bir üst domain kontrol ediliyor: ' + next_domain)
        next_active = check_domain(next_domain)
        print('Bir üst domain aktif mi: ' + str(next_active))
        
        if next_active:
            print('Bir üst domain aktif, güncelleniyor: ' + next_domain)
            with open('domain.txt', 'w') as f:
                f.write('guncel_domain=' + next_domain)
            # Başarılı çıkış kodu
            exit(0)
        else:
            print('Bir üst domain aktif değil, değişiklik yok')
            # Bu da başarılı çıkış kodu (değişiklik yok)
            exit(0)
        "

    - name: Commit and push changes
      run: |
        # Her zaman domain.txt'yi kontrol et ve push et
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git add domain.txt
        
        # Değişiklik varsa commit et
        if git diff --staged --quiet; then
          echo "Değişiklik yok, commit atlanıyor"
        else
          git commit -m "Güncel domain: $(date '+%Y-%m-%d %H:%M:%S')"
          git push
          echo "Değişiklikler push edildi"
        fi
